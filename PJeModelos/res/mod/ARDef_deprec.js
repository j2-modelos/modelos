window.j2.res.mod.ARDef.xmlEncode = {      
  load : "<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->


<Definitions
    id="classeDefs"
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
    xmlns='http://j2'
    xsi:schemaLocation='http://j2 ../XML/j2.xsd'
    targetNamespace="http://j2">
    <classeDef id="ARcls">
        <versao id="4.0">
            <elemento tag="div" scope="EXP">
                <HTMLAttribute name="style" value="PADDING-TOP: 17mm"/>
                <!--classeImp id="AR.Header" versao="3.0" scope="EXP"/>
                <classeImp id="AR.Core" versao="3.0" scope="EXP"/>
                <classeImp id="AR.CorreiosControl" versao="3.0" scope="EXP"/>
                <classeImp id="AR.Info" versao="3.0" scope="EXP"/-->
                <innerContent scope="EXP"/>
            </elemento>
        </versao>
        <versao id="7.0">
            <elemento tag="div" scope="EXP" id="ARDigitalBody-bodyDiv">
                <!--HTMLAttribute name="style" value="PADDING-TOP: 105px" /--> <!-- ard -->
                <innerContent scope="EXP"/>
            </elemento>
        </versao>
        <versao id="7.1">
            <elemento tag="div" scope="EXP" id="ARDigitalBody-bodyDiv">
                <!--HTMLAttribute name="style" value="PADDING-TOP: 190px; padding-left: 150px; padding-bottom: 50px;" /--> <!-- ard -->
                <HTMLAttribute name="style" value="PADDING-TOP: 10px; padding-left: 150px;" /> <!-- ard -->
                <innerContent scope="EXP"/>
            </elemento>
        </versao>
    </classeDef>
    
    <classeDef id="AR.Body">
        <versao id="4.0">
            <elemento tag="div" scope="EXP" id="AR.body">
                <HTMLAttribute name="style" value="BORDER-TOP: 1px solid; HEIGHT: 132mm; BORDER-RIGHT: 1px solid; WIDTH: 100%; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid"/>
                <innerContent scope="EXP"/>
            </elemento>
        </versao>
    </classeDef>
    
    <classeDef id="AR.Body.CodigoBarrasAR">
        <versao id="4.0">
            <elemento tag="div" scope="EXP" id="AR.Body.CodigoBarrasAR">
                <HTMLAttribute name="style" value="HEIGHT: 48mm; WIDTH: 50%; VERTICAL-ALIGN: middle; POSITION: relative; FLOAT: right; BORDER-RIGHT: 1px solid; DISPLAY: table-row"/>
                <HTMLAttribute name="contenteditable" value="false"/>

                <elemento tag="p" id="AR.Body.CodigoBarrasAR#PARN" scope="EXP" class="p b AlignCenter AR.Body.CodigoBarrasAR#PARN">
                    <elemento tag="span" id="AR.Body.CodigoBarrasAR#PARNSedex" scope="EXP" class="Hidden AR.Body.CodigoBarrasAR#PARNSedex">
                        SEDEX
                    </elemento>
                    <elemento tag="img" id="AR.Body.CodigoBarrasAR#PARN.BarCode" scope="EXP" class="Hidden AR.Body.CodigoBarrasAR#PARN.BarCode">
                        <HTMLAttribute name="title" value="Clique para consultar rastreamento pelo sítio dos correios."/>
                    </elemento>
                    <elemento tag="span" id="AR.Body.CodigoBarrasAR#PARNNumero" scope="EXP">
                        XXXNumeroARXXXX
                    </elemento>
                </elemento>
                <elemento tag="form" id="AR.Body.CodigoBarrasAR#QueryForm" scope="EXP" class="Hidden">
                    <HTMLAttribute name="method" value="post"/>
                    <!--HTMLAttribute name="target" value="TODEFINE"/-->
                    <HTMLAttribute name="action" value="https://www2.correios.com.br/sistemas/rastreamento/resultado_semcontent.cfm?"/>
                    <!--HTMLAttribute name="action" value="https://www2.correios.com.br/sistemas/rastreamento/ctrl/ctrlRastreamento.cfm?"/-->
                    <elemento tag="textarea" id="objetos" scope="EXP">
                        <HTMLAttribute name="name" value="objetos"/>
                    </elemento>
                </elemento>
            </elemento>
        </versao>
    </classeDef>    
    
    <classeDef id="AR.Body.DestRemPlus">
        <versao id="4.0">
            <elemento tag="div" scope="EXP" id="AR.Body.DestRemPlus">
                <HTMLAttribute name="style" value="BORDER-TOP: 1px solid; HEIGHT: 84mm; WIDTH: 100%; FLOAT: left; DISPLAY: table"/>
                <innerContent scope="EXP"/>
            </elemento>
        </versao>
    </classeDef>
    <classeDef id="AR.Body.DestRemPlus.Left">
        <versao id="4.1">
            <elemento tag="div" scope="EXP" id="AR.Body.DestRemPlus.Right"><HTMLAttribute name="style" value="HEIGHT: 84mm; WIDTH: 75%; POSITION: relative; FLOAT: left"/>
                <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="HEIGHT: 40mm; BORDER-RIGHT: 1px solid; WIDTH: 100%; BORDER-BOTTOM: 1px solid; POSITION: relative; FLOAT: left"/>
                    <elemento tag="p" scope="EXP" class="p AR.Body.DestRemPlus.MajorLabels">
                        <textHTML scope="EXP"> 
                            <data>
                                <![CDATA[
                                    <strong>DESTINATÁRIO</strong>
                                    <br>
                                    <span id="AR.Body.DestRemPlus.Right#ParteVinculadaAoExpediente">
                                        [use o editor para inserir manualmente endereco do AR aqui]
                                    </span>
                                ]]>
                            </data>
                        </textHTML>
                    </elemento>
                </elemento>
                <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="HEIGHT: 24mm; BORDER-RIGHT: 1px solid; WIDTH: 100%; POSITION: relative; FLOAT: left"/>
                    <elemento tag="p" scope="EXP" class="p AR.Body.DestRemPlus.MajorLabels">
                        <textHTML scope="EXP"> 
                            <data>
                                <![CDATA[
                                    <strong>REMETENTE</strong>
                                    <br>
                                    #{j2.env.PJeVars.unidade.nome}
                                    <br>
                                    <strong>ENDEREÇO PARA DEVOLUÇÃO DO AR:</strong>
                                    <br>
                                    <span id="forumLB">#{j2.env.PJeVars.unidade.forumLB} </span>
                                    #{j2.env.modId.unidade.config.enderecoManual.rua}<span style="display:none">,&nbsp;</span>
                                    #{j2.env.modId.unidade.config.enderecoManual.numero}<span style="display:none">,&nbsp;</span>
                                    #{j2.env.modId.unidade.config.enderecoManual.bairro}<span style="display:none">,&nbsp;</span>
                                    #{j2.env.modId.unidade.config.enderecoManual.complemento}<span style="display:none">,&nbsp;</span>
                                    #{j2.env.modId.unidade.config.enderecoManual.cidade}<span style="display:none">,&nbsp;</span>
                                    #{j2.env.modId.unidade.config.enderecoManual.uf}<span style="display:none">,&nbsp;</span>
                                    CEP:#{j2.env.modId.unidade.config.enderecoManual.cep}<span style="display:none">,&nbsp;</span>
                                ]]>
                            </data>
                        </textHTML>   
                    </elemento>             
                </elemento>
                <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="BORDER-TOP: 1px solid; HEIGHT: 20mm; WIDTH: 100%; POSITION: relative; FLOAT: left"/>
                    <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="HEIGHT: 10mm; BORDER-RIGHT: 1px solid; WIDTH: 100%; BORDER-BOTTOM: 1px solid; FLOAT: left"/>
                    <elemento tag="p" scope="EXP" class="p b AR.Body.DestRemPlus.MinorLabelsLeft">
                        ASSINATURA DO RECEBEDOR
                    </elemento>
                    </elemento>
                    <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="HEIGHT: 35px; BORDER-RIGHT: 1px solid; WIDTH: 100%; FLOAT: left"/>
                        <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="HEIGHT: 100%; BORDER-RIGHT: 1px solid; WIDTH: 50%; FLOAT: left"/>
                            <elemento tag="p" scope="EXP" class="p b AR.Body.DestRemPlus.MinorLabelsLeft">
                                RG DO RECEBEDOR
                            </elemento>
                        </elemento>
                        <elemento tag="div" scope="EXP" >
                            <elemento tag="p" scope="EXP" class="p b AR.Body.DestRemPlus.MinorLabelsLeft">
                                NOME E MATRICULA DO EMPRGADO ECT
                            </elemento>
                        </elemento>
                    </elemento>
                </elemento>
            </elemento>
        </versao>
        <versao id="4.0">
            <elemento tag="div" scope="EXP" id="AR.Body.DestRemPlus.Right"><HTMLAttribute name="style" value="HEIGHT: 84mm; WIDTH: 75%; POSITION: relative; FLOAT: left"/>
                <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="HEIGHT: 40mm; BORDER-RIGHT: 1px solid; WIDTH: 100%; BORDER-BOTTOM: 1px solid; POSITION: relative; FLOAT: left"/>
                    <elemento tag="p" scope="EXP" class="p AR.Body.DestRemPlus.MajorLabels">
                        <textHTML scope="EXP"> 
                            <data>
                                <![CDATA[
                                    <strong>DESTINATÁRIO</strong>
                                    <br>
                                    <span id="AR.Body.DestRemPlus.Right#ParteVinculadaAoExpediente">
                                        #{j2.env.PJeVars.expediente.destinatario}
                                    </span>
                                ]]>
                            </data>
                        </textHTML>
                    </elemento>
                </elemento>
                <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="HEIGHT: 24mm; BORDER-RIGHT: 1px solid; WIDTH: 100%; POSITION: relative; FLOAT: left"/>
                    <elemento tag="p" scope="EXP" class="p AR.Body.DestRemPlus.MajorLabels">
                        <textHTML scope="EXP"> 
                            <data>
                                <![CDATA[
                                    <strong>REMETENTE</strong>
                                    <br>
                                    #{j2.env.PJeVars.unidade.nome}
                                    <br>
                                    <strong>ENDEREÇO PARA DEVOLUÇÃO DO AR:</strong>
                                    <br>
                                    <span id="forumLB">#{j2.env.PJeVars.unidade.forumLB} </span>
                                    #{j2.env.modId.unidade.config.enderecoManual.rua}<span style="display:none">,&nbsp;</span>
                                    #{j2.env.modId.unidade.config.enderecoManual.numero}<span style="display:none">,&nbsp;</span>
                                    #{j2.env.modId.unidade.config.enderecoManual.bairro}<span style="display:none">,&nbsp;</span>
                                    #{j2.env.modId.unidade.config.enderecoManual.complemento}<span style="display:none">,&nbsp;</span>
                                    #{j2.env.modId.unidade.config.enderecoManual.cidade}<span style="display:none">,&nbsp;</span>
                                    #{j2.env.modId.unidade.config.enderecoManual.uf}<span style="display:none">,&nbsp;</span>
                                    CEP:#{j2.env.modId.unidade.config.enderecoManual.cep}<span style="display:none">,&nbsp;</span>
                                ]]>
                            </data>
                        </textHTML>   
                    </elemento>             
                </elemento>
                <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="BORDER-TOP: 1px solid; HEIGHT: 20mm; WIDTH: 100%; POSITION: relative; FLOAT: left"/>
                    <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="HEIGHT: 10mm; BORDER-RIGHT: 1px solid; WIDTH: 100%; BORDER-BOTTOM: 1px solid; FLOAT: left"/>
                    <elemento tag="p" scope="EXP" class="p b AR.Body.DestRemPlus.MinorLabelsLeft">
                        ASSINATURA DO RECEBEDOR
                    </elemento>
                    </elemento>
                    <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="HEIGHT: 35px; BORDER-RIGHT: 1px solid; WIDTH: 100%; FLOAT: left"/>
                        <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="HEIGHT: 100%; BORDER-RIGHT: 1px solid; WIDTH: 50%; FLOAT: left"/>
                            <elemento tag="p" scope="EXP" class="p b AR.Body.DestRemPlus.MinorLabelsLeft">
                                RG DO RECEBEDOR
                            </elemento>
                        </elemento>
                        <elemento tag="div" scope="EXP" >
                            <elemento tag="p" scope="EXP" class="p b AR.Body.DestRemPlus.MinorLabelsLeft">
                                NOME E MATRICULA DO EMPRGADO ECT
                            </elemento>
                        </elemento>
                    </elemento>
                </elemento>
            </elemento>
        </versao>
    </classeDef>
    <classeDef id="AR.Body.DestRemPlus.Right">
        <versao id="4.0">
            <elemento tag="div" scope="EXP" id="AR.Body.DestRemPlus.Right"><HTMLAttribute name="style" value="HEIGHT: 84mm; WIDTH: 25%; POSITION: relative; FLOAT: left"/>
                <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="HEIGHT: 25mm; WIDTH: 100%; POSITION: relative; FLOAT: left"/>
                    <elemento tag="p" scope="EXP" class="p b AlignCenter AR.Body.DestRemPlus.MinorLabels">
                        <textHTML scope="EXP"> 
                            <data>
                                <![CDATA[UNIDADE DE POSTAGEM<br>CARIMBO DATADOR]]>
                            </data>
                        </textHTML>
                    </elemento>
                </elemento>
                <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="BORDER-TOP: white 1px solid; HEIGHT: 39mm; WIDTH: 100%; POSITION: relative; FLOAT: left"/>
                </elemento>
                <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="BORDER-TOP: 1px solid; HEIGHT: 20mm; WIDTH: 100%; POSITION: relative; FLOAT: left"/>
                    <elemento tag="p" scope="EXP" class="p b AlignCenter AR.Body.DestRemPlus.MinorLabels">
                        DATAA DA ENTREGA
                    </elemento>
                </elemento>
            </elemento>
        </versao>
    </classeDef>    
    
    <classeDef id="AR.Body.Identifications">
        <versao id="4.0">
            <elemento tag="div" scope="EXP" id="AR.Body.Identifications">
                <HTMLAttribute name="style" value="WIDTH: 49%; POSITION: relative; FLOAT: RIGHT"/>
                
                <innerContent scope="EXP"/>
            </elemento>
        </versao>
    </classeDef>
    
    <classeDef id="AR.Body.Identifications.ConteudoDescricao">
        <versao id="4.0">
            <elemento tag="div" scope="EXP" id="AR.Body.Identifications.ConteudoDescricao"><HTMLAttribute name="style" value="HEIGHT: 13mm"/>
                <elemento tag="div" scope="EXP" ><HTMLAttribute name="style" value="HEIGHT: 100%"/>
                    <elemento tag="p" scope="EXP" class="p b AlignCenter AR.Body.Identifications.ConteudoDescricao#DescricaoConteudoAR" id="AR.Body.Identifications.ConteudoDescricao#DescricaoConteudoAR">
                        XXXDescricaoConteudoARXXX
                    </elemento>
                </elemento>
            </elemento>
        </versao>
    </classeDef>
    
    <classeDef id="AR.Body.Identifications.AR-AvisoRecebimento">
        <versao id="4.0">
            <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="HEIGHT: 14mm; BORDER-BOTTOM: 1px solid"/>
                <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="HEIGHT: 14mm; BORDER-RIGHT: 1px solid; WIDTH: 20%; FLOAT: left"/>
                    <elemento tag="p" scope="EXP" class="p b AlignCenter AR.Body.Identifications.AR-AvisoRecebimento#AR">
                        AR
                    </elemento>
                </elemento>
                <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="HEIGHT: 14mm"/>
                    <elemento tag="p" scope="EXP" class="p AlignCenter AR.Body.Identifications.AR-AvisoRecebimento#AvisoRecebimento">
                        Aviso de Recebimento
                    </elemento>
                </elemento>
            </elemento>
        </versao>
    </classeDef>
    
    <classeDef id="AR.Body.Identifications.ProcessoQualificacao">
        <versao id="4.0">
            <elemento tag="div" scope="EXP" id="AR.Body.Identifications.ProcessoQualificacao"><HTMLAttribute name="style" value="HEIGHT: 20mm; BORDER-BOTTOM: 1px solid; overflow: hidden;"/>
                <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="HEIGHT: 20px; WIDTH: 100%; POSITION: relative; TEXT-ALIGN: center; Z-INDEX: 50"/>
                    <elemento tag="img" scope="EXP" id="AR.Body.Identifications.ProcessoQualificacao#codPorcNumImg">
                        <HTMLAttribute name="style" value="WIDTH: 200px;MARGIN-TOP: 5PX;"/>
                    </elemento>
                </elemento>
                <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="HEIGHT: 94%; WIDTH: 98%; POSITION: relative; PADDING-BOTTOM: 1%; PADDING-TOP: 1%; PADDING-LEFT: 1%; Z-INDEX: 100; PADDING-RIGHT: 1%"/>
                    <!-- Linha da numero do processo -->
                    <elemento tag="div" scope="EXP" class="width100">
                        <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="WIDTH: 23%; FLOAT: left"/>
                            <elemento tag="p" scope="EXP" class="p lnHght1 b ar.fntQlfTableDtl">Processo:</elemento>
                        </elemento>
                        <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="WIDTH: 77%; FLOAT: left"/>
                            <elemento tag="p" scope="EXP" class="p lnHght1 b ar.fntQlfTableDtl">#{j2.env.PJeVars.processo.numero}</elemento>
                        </elemento>                        
                    </elemento>
                    <!-- linha da classificação -->
                    <elemento tag="div" scope="EXP" class="width100">
                        <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="WIDTH: 23%; FLOAT: left"/>
                            <elemento tag="p" scope="EXP" class="p lnHght1 b ar.fntQlfTable">Classe CNJ:</elemento>
                        </elemento>
                        <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="WIDTH: 77%; FLOAT: left"/>
                            <elemento tag="p" scope="EXP" class="p lnHght1 ar.fntQlfTable">#{j2.env.PJeVars.processo.classe}</elemento>
                        </elemento>                        
                    </elemento>                  
                    <!-- linha do polo ativo -->
                    <elemento tag="div" scope="EXP" class="width100">
                        <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="WIDTH: 23%; FLOAT: left"/>
                            <elemento tag="p" scope="EXP" class="p lnHght1 b ar.fntQlfTable">#{j2.env.PJeVars.processo.polos.ativo}:</elemento>
                        </elemento>
                        <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="WIDTH: 77%; FLOAT: left"/>
                            <elemento tag="p" scope="EXP" class="p lnHght1 ar.fntQlfTable">#{j2.env.PJeVars.partes.ativa.nome}</elemento>
                        </elemento>                        
                    </elemento>
                    <!-- Linha do polo passivo -->
                    <elemento tag="div" scope="EXP" class="width100">
                        <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="WIDTH: 23%; FLOAT: left"/>
                            <elemento tag="p" scope="EXP" class="p lnHght1 b ar.fntQlfTable">#{j2.env.PJeVars.processo.polos.passivo}:</elemento>
                        </elemento>
                        <elemento tag="div" scope="EXP"><HTMLAttribute name="style" value="WIDTH: 77%; FLOAT: left"/>
                            <elemento tag="p" scope="EXP" class="p lnHght1 ar.fntQlfTable">#{j2.env.PJeVars.partes.passiva.nome}</elemento>
                        </elemento>                        
                    </elemento>                    
                    <!-- fim das linhas da tabela-->                                                                                            
                </elemento>
            </elemento>
        </versao>
    </classeDef>
    
  

    
    <classeDef id="AR.CorreiosControl">
        <versao id="default">
            <textHTML scope="EXP"> 
                <data>
                    <![CDATA[<div style="HEIGHT: 150px; BORDER-RIGHT: 1px solid; WIDTH: 100%; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; DISPLAY: table" name="InformacoesDevolucao">
<div style="HEIGHT: 20px; WIDTH: 100%; BORDER-BOTTOM: 1px solid">
<p style="FONT-SIZE: 8pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; FONT-WEIGHT: bold; TEXT-ALIGN: center; PADDING-TOP: 2px; MARGIN: 0cm 0cm 0pt">Para uso dos Correios: MOTIVO DA DEVOLUÇÃO AO REMETENTE</p></div>
<div style="HEIGHT: 105px; WIDTH: 100%; DISPLAY: table">
<div id="tentativaEntregas" style="HEIGHT: 100%; BORDER-RIGHT: 1px solid; WIDTH: 30%; FLOAT: left">
<div style="HEIGHT: 94%; WIDTH: 98%; PADDING-BOTTOM: 1%; PADDING-TOP: 1%; PADDING-LEFT: 1%; PADDING-RIGHT: 1%">
<div style="HEIGHT: 25%; WIDTH: 100%; DISPLAY: inline-flex">
<div style="WIDTH: 100%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; FONT-WEIGHT: bold; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt">TENTATIVAS DE ENTREGA</p></div></div>
<div style="HEIGHT: 25%; WIDTH: 100%; DISPLAY: inline-flex">
<div style="WIDTH: 100%; FLOAT: left">
<p style="FONT-SIZE: 8pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt">1ª: ___/___/____ &nbsp;____:____h</p></div></div>
<div style="HEIGHT: 25%; WIDTH: 100%; DISPLAY: inline-flex">
<div style="WIDTH: 100%; FLOAT: left">
<p style="FONT-SIZE: 8pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt">2ª: ___/___/____ &nbsp;____:____h</p></div></div>
<div style="HEIGHT: 25%; WIDTH: 100%; DISPLAY: inline-flex">
<div style="WIDTH: 100%; FLOAT: left">
<p style="FONT-SIZE: 8pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt">3ª: ___/___/____ &nbsp;____:____h</p></div></div></div></div>
<div id="tentativaEntregasAfter" style="HEIGHT: 100%; BORDER-RIGHT: 1px solid; WIDTH: 45%; FLOAT: left">
<div style="HEIGHT: 94%; WIDTH: 98%; PADDING-BOTTOM: 1%; PADDING-TOP: 1%; PADDING-LEFT: 1%; PADDING-RIGHT: 1%">
<div style="HEIGHT: 16%; WIDTH: 100%; DISPLAY: inline-block">
<div style="WIDTH: 100%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; FONT-WEIGHT: bold; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt">MOTIVO DE DEVOLUÇÃO</p></div></div>
<div style="HEIGHT: 16%; WIDTH: 100%; DISPLAY: inline-block">
<div style="WIDTH: 50%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 0.9">(&nbsp;&nbsp; ) Mudou-se</p></div>
<div style="WIDTH: 50%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 0.9">(&nbsp;&nbsp; ) Desconhecido</p></div></div>
<div style="HEIGHT: 16%; WIDTH: 100%; DISPLAY: inline-block">
<div style="WIDTH: 50%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 0.9">(&nbsp;&nbsp; ) Endereço Insuficiente</p></div>
<div style="WIDTH: 50%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 0.9">(&nbsp;&nbsp; ) Recusado</p></div></div>
<div style="HEIGHT: 16%; WIDTH: 100%; DISPLAY: inline-block">
<div style="WIDTH: 50%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 0.9">(&nbsp;&nbsp; ) Não existe o número</p></div>
<div style="WIDTH: 50%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 0.9">(&nbsp;&nbsp; ) Ausente</p></div></div>
<div style="HEIGHT: 16%; WIDTH: 100%; DISPLAY: inline-block">
<div style="WIDTH: 50%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 0.9">(&nbsp;&nbsp; ) Falecido</p></div>
<div style="WIDTH: 50%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 0.9">(&nbsp;&nbsp; ) Não Procurado</p></div></div>
<div style="HEIGHT: 16%; WIDTH: 100%; DISPLAY: inline-block">
<div style="WIDTH: 100%; FLOAT: left">
<p style="FONT: 7pt/0.9 &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; MARGIN: 0cm 0cm 0pt">(&nbsp;&nbsp; ) Outros: ___________________________________</p></div></div></div></div>
<div id="afterMotivoDevolucao" style="HEIGHT: 100%; WIDTH: 24%; FLOAT: left; DISPLAY: table">
<div style="HEIGHT: 53px; WIDTH: 100%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; FONT-WEIGHT: bold; TEXT-ALIGN: center; PADDING-TOP: 2px; MARGIN: 0cm 0cm 0pt">RUBRICA DO RESPONSÁVEL</p></div>
<div style="BORDER-TOP: 1px solid; WIDTH: 103%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; FONT-WEIGHT: bold; TEXT-ALIGN: center; PADDING-TOP: 2px; MARGIN: 0cm 0cm 0pt">DATA</p></div></div></div>
<div style="BORDER-TOP: 1px solid; HEIGHT: 25px; WIDTH: 100%; FLOAT: left">
<div style="HEIGHT: 100%; WIDTH: 60%; FLOAT: left">
<p style="FONT-SIZE: 7pt; FONT-FAMILY: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, sans-serif; FONT-WEIGHT: bold; TEXT-ALIGN: left; PADDING-LEFT: 5px; MARGIN: 0cm 0cm 0pt">Informações prestadas por:</p></div>
<div style="HEIGHT: 100%; WIDTH: 34%; FLOAT: left; BORDER-LEFT: 1px solid">
<p style="TEXT-ALIGN: left; FONT: 7pt tahoma; PADDING-LEFT: 4px; MARGIN: 0cm 0cm 0pt">Reitegrado ao serviço postal em ___/___/_____</p></div></div></div>
                    ]]>
                </data>    
            </textHTML>
        </versao>
    </classeDef>
    
    <classeDef id="AR.EdtControles">
        <versao id="4.1">
            <elemento tag="div" scope="EDT" id="AR.EdtControles" >
                <HTMLAttribute name="style" value="display:block;"/>
                <elemento tag="input" scope="EDT" id="AR.EdtControles#Numero" class="p edtCtrl FntDocEdt AlignCenter AR.EdtControles#Numero">
                    <HTMLAttribute name="type" value="text"/>
                    <HTMLAttribute name="placeholder" value="AB123456785BR"/>
                    <HTMLAttribute name="maxlength" value="13"/>
                    <HTMLAttribute name="align" value="middle"/>
                    <!--HTMLAttribute name="pattern" value="[a-zA-Z]{2}[0-9]{9}[a-zA-Z]{2}"/-->
                </elemento>
                <elemento tag="select" scope="EDT" id="AR.EdtControles#EtiquetaTipo" class="p edtCtrl FntDocEdt AR.EdtControles#EtiquetaTipo">
                    <elemento tag="option" scope="EDT" >
                        <HTMLAttribute name="value" value="AR.EdtControles#EtiquetaTipo.Carta"/>
                        Carta
                    </elemento>
                    <elemento tag="option" scope="EDT" >
                        <HTMLAttribute name="value" value="AR.EdtControles#EtiquetaTipo.SEDEX"/>
                        SEDEX
                    </elemento>
                </elemento>
                <elemento tag="button" scope="EDT" id="AR.EdtControles#Action" class="p edtCtrl FntDocEdt AR.EdtControles#Action">
                    <elemento tag="img" scope="EDT" id="AR.EdtControles#Action-Stamp">
                        <HTMLAttribute name="src" value="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsSAAALEgHS3X78AAAAB3RJTUUH0wkCFgswIuFYfgAAAD50RVh0Q29tbWVudABDcmVhdGVkIHdpdGggVGhlIEdJTVAKCihjKSAyMDAzIEpha3ViICdqaW1tYWMnIFN0ZWluZXInM+9YAAABTElEQVR42qWTzU7rMBCFv3Pm7rgPyaabri9RUSVA8JZ9iIQ2TRGo0rCwnZSfDVxLjuWj8ec5MzHANZC/nNcCMjP56ThNJ67+XvGnCbvdDocJGzuwXfdRVhlH1V10ADeAbZ4enwDx8HDP3f0dQmy3WwRsbm8B6LoOAeVzAYjwDAKhFnEZXUdKXwElbSGVWbQGWnRJGKHUVwuo+AdqsBHC1qzNWfkTIBwIiJYFYBnUYAug7YGlCw6X9Op6ebPlb218BNioWphvcoXNtfFixZ8AEYHUQLqACtlLUaWiL+7JzMy+73O1WmU/9DkMQz4Pz7nf7/NwOOQ4jjkdj/lyOuV6vc63t9c8n88J5IcuWCIcbDYbHKbrOrquw2H+3dyg+q/Isdhpb+E4jiS12sXo0kqBLKxWJ+FqTUBO0zT7kSBzaZtUgqkZqh5uXeF/n/M7RGR7qRmhEMIAAAAASUVORK5CYII="/>
                    </elemento>
                    <elemento tag="img" scope="EDT" class="Hidden" id="AR.EdtControles#Action-Refresh">
                        <HTMLAttribute name="src" value="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAnVJREFUeNqkU11IFFEU/mbccX9czcqtB0O28i+hDDeph8igQkWQivCp8CWpNXzRLKOHXsWKLGT3oUL6gaKoJCIo6M2HCA0ySltWpN3VVmx3WXfWcWZ3Zjozu01bS09e+Lj3nnvOued+37mMqqpYy2Au3m7611ZBcBOOEWqytm+EFwTvzm1NgdbGM+rg4w4MdY0zJlVVcoOvWyxMb3V1IbaUm1BczOrGREKpCc2nB3w+aUDbX3ty0ggwKX8SeJxOzt1Qb0Yg9BPhRegwHE1AXR0w+fEdjh+14/mY9DuBrM1DW51md2014PP/wIrAIBLhIAgsNIasFoUqEvWAHbUS4ssspPSqkaDcZmX7qyqBQDCCSLQAC2EOxG03oI6TjxznV28lEusOtTYXIhZLIsmLlEDIJlDS83wSV1+/kYg4k10jCkiPXDn16mu2evXCnf040e7Qg/mkSBVxRgLm3MiuPGlKLBuNdSg68z+dvff7F7q1ClBq2+zJSpc37Jb1TO7e0/Plr3NWVmSkFcnd1mZCSwurQ1uTDec7HkI7T8liBcFDULuGK0XCsNFIp29sR5G5VD180EysSygoYPH+AwcxJdzjV6OXyecIw2B0n2sTGurLKKGKR89mSQmp6m7vnJ+eIOuECCSdRlBGKgETn/lOm43tdJRZ0VjvgKKk8GkqiNnvAmJx8eZoX8Cvq6CVyqQZutmO6ZkSuBoy+h7Yu8F45/JyQp+n/TwWIyKphL6cTtQbCWNvg2h2dSG48BQlRSw4LtPGqZSCpZiIudAKREkefNAfvpRLotHKw2cn0OPdvSerRjvBkfVZIrzM9Acm837jWr/zLwEGABlsF651Nz3mAAAAAElFTkSuQmCC"/>
                    </elemento>
                </elemento>
                <elemento tag="div" scope="EDT" id="AR-EdtControles-maoPropria">
                    <HTMLAttribute name="style" value="display: flex;"/>
                    <elemento tag="div" scope="EDT">
                        <HTMLAttribute name="style" value="float:left;"/>
                        <elemento tag="input" scope="EDT" id="AR-EdtControles-maoPropria-inputCheck" class="">
                            <HTMLAttribute name="type" value="checkbox"/>
                        </elemento>
                    </elemento>
                    <elemento tag="div" scope="EDT">
                        <HTMLAttribute name="style" value="float:left;"/>
                        <elemento tag="span" scope="EDT" id="AR-EdtControles-maoPropria-label">
                            <elemento tag="p" scope="EDT" class="p FntDocEdt AlignJustify width100">
                                Aviso de Recebimeno em Mão Própria
                            </elemento>
                        </elemento>
                    </elemento>
                </elemento>                
                <elemento tag="div" scope="EDT" id="AR-EdtControles-enderecoManual">
                    <HTMLAttribute name="style" value="display: flex; width:100%;"/>
                    <elemento tag="div" scope="EDT">
                        <HTMLAttribute name="style" value="float:left; width:100%;"/>
                        <elemento tag="textarea" scope="EDT" id="AR-EdtControles-enderecoManual-textarea" 
                                  class="p edtCtrl FntDocEdt width100 heightUnset resizeNone">
                            <HTMLAttribute name="Rows" value="4"/>
                            <HTMLAttribute name="placeholder" value="Inserir manualmente endereco do AR aqui"/>
                        </elemento>
                    </elemento>
                </elemento>         
            </elemento>
        </versao>
        <versao id="4.0">
            <elemento tag="div" scope="EDT" id="AR.EdtControles" >
                <HTMLAttribute name="style" value="display:block;"/>
                <elemento tag="input" scope="EDT" id="AR.EdtControles#Numero" class="p edtCtrl FntDocEdt AlignCenter AR.EdtControles#Numero">
                    <HTMLAttribute name="type" value="text"/>
                    <HTMLAttribute name="placeholder" value="AB123456785BR"/>
                    <HTMLAttribute name="maxlength" value="13"/>
                    <HTMLAttribute name="align" value="middle"/>
                    <!--HTMLAttribute name="pattern" value="[a-zA-Z]{2}[0-9]{9}[a-zA-Z]{2}"/-->
                </elemento>
                <elemento tag="select" scope="EDT" id="AR.EdtControles#EtiquetaTipo" class="p edtCtrl FntDocEdt AR.EdtControles#EtiquetaTipo">
                    <elemento tag="option" scope="EDT" >
                        <HTMLAttribute name="value" value="AR.EdtControles#EtiquetaTipo.Carta"/>
                        Carta
                    </elemento>
                    <elemento tag="option" scope="EDT" >
                        <HTMLAttribute name="value" value="AR.EdtControles#EtiquetaTipo.SEDEX"/>
                        SEDEX
                    </elemento>
                </elemento>
                <elemento tag="button" scope="EDT" id="AR.EdtControles#Action" class="p edtCtrl FntDocEdt AR.EdtControles#Action">
                    <elemento tag="img" scope="EDT" id="AR.EdtControles#Action-Stamp">
                        <HTMLAttribute name="src" value="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsSAAALEgHS3X78AAAAB3RJTUUH0wkCFgswIuFYfgAAAD50RVh0Q29tbWVudABDcmVhdGVkIHdpdGggVGhlIEdJTVAKCihjKSAyMDAzIEpha3ViICdqaW1tYWMnIFN0ZWluZXInM+9YAAABTElEQVR42qWTzU7rMBCFv3Pm7rgPyaabri9RUSVA8JZ9iIQ2TRGo0rCwnZSfDVxLjuWj8ec5MzHANZC/nNcCMjP56ThNJ67+XvGnCbvdDocJGzuwXfdRVhlH1V10ADeAbZ4enwDx8HDP3f0dQmy3WwRsbm8B6LoOAeVzAYjwDAKhFnEZXUdKXwElbSGVWbQGWnRJGKHUVwuo+AdqsBHC1qzNWfkTIBwIiJYFYBnUYAug7YGlCw6X9Op6ebPlb218BNioWphvcoXNtfFixZ8AEYHUQLqACtlLUaWiL+7JzMy+73O1WmU/9DkMQz4Pz7nf7/NwOOQ4jjkdj/lyOuV6vc63t9c8n88J5IcuWCIcbDYbHKbrOrquw2H+3dyg+q/Isdhpb+E4jiS12sXo0kqBLKxWJ+FqTUBO0zT7kSBzaZtUgqkZqh5uXeF/n/M7RGR7qRmhEMIAAAAASUVORK5CYII="/>
                    </elemento>
                    <elemento tag="img" scope="EDT" class="Hidden" id="AR.EdtControles#Action-Refresh">
                        <HTMLAttribute name="src" value="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAnVJREFUeNqkU11IFFEU/mbccX9czcqtB0O28i+hDDeph8igQkWQivCp8CWpNXzRLKOHXsWKLGT3oUL6gaKoJCIo6M2HCA0ySltWpN3VVmx3WXfWcWZ3Zjozu01bS09e+Lj3nnvOued+37mMqqpYy2Au3m7611ZBcBOOEWqytm+EFwTvzm1NgdbGM+rg4w4MdY0zJlVVcoOvWyxMb3V1IbaUm1BczOrGREKpCc2nB3w+aUDbX3ty0ggwKX8SeJxOzt1Qb0Yg9BPhRegwHE1AXR0w+fEdjh+14/mY9DuBrM1DW51md2014PP/wIrAIBLhIAgsNIasFoUqEvWAHbUS4ssspPSqkaDcZmX7qyqBQDCCSLQAC2EOxG03oI6TjxznV28lEusOtTYXIhZLIsmLlEDIJlDS83wSV1+/kYg4k10jCkiPXDn16mu2evXCnf040e7Qg/mkSBVxRgLm3MiuPGlKLBuNdSg68z+dvff7F7q1ClBq2+zJSpc37Jb1TO7e0/Plr3NWVmSkFcnd1mZCSwurQ1uTDec7HkI7T8liBcFDULuGK0XCsNFIp29sR5G5VD180EysSygoYPH+AwcxJdzjV6OXyecIw2B0n2sTGurLKKGKR89mSQmp6m7vnJ+eIOuECCSdRlBGKgETn/lOm43tdJRZ0VjvgKKk8GkqiNnvAmJx8eZoX8Cvq6CVyqQZutmO6ZkSuBoy+h7Yu8F45/JyQp+n/TwWIyKphL6cTtQbCWNvg2h2dSG48BQlRSw4LtPGqZSCpZiIudAKREkefNAfvpRLotHKw2cn0OPdvSerRjvBkfVZIrzM9Acm837jWr/zLwEGABlsF651Nz3mAAAAAElFTkSuQmCC"/>
                    </elemento>
                </elemento>
                <elemento tag="div" scope="EDT" id="AR-EdtControles-maoPropria">
                    <HTMLAttribute name="style" value="display: flex;"/>
                    <elemento tag="div" scope="EDT">
                        <HTMLAttribute name="style" value="float:left;"/>
                        <elemento tag="input" scope="EDT" id="AR-EdtControles-maoPropria-inputCheck" class="">
                            <HTMLAttribute name="type" value="checkbox"/>
                        </elemento>
                    </elemento>
                    <elemento tag="div" scope="EDT">
                        <HTMLAttribute name="style" value="float:left;"/>
                        <elemento tag="span" scope="EDT" id="AR-EdtControles-maoPropria-label">
                            <elemento tag="p" scope="EDT" class="p FntDocEdt AlignJustify width100">
                                Aviso de Recebimeno em Mão Própria
                            </elemento>
                        </elemento>
                    </elemento>
                </elemento>                
            </elemento>
        </versao>
        
        <versao id="7.0"> <!-- ard -->
            <elemento tag="div" scope="EDT" id="AR.EdtControles" >
                <HTMLAttribute name="style" value="display:block;"/>
                <elemento tag="input" scope="EDT" id="AR.EdtControles#Numero" class="p edtCtrl FntDocEdt AlignCenter AR.EdtControles#Numero">
                    <HTMLAttribute name="type" value="text"/>
                    <HTMLAttribute name="placeholder" value="AB123456785BR"/>
                    <HTMLAttribute name="maxlength" value="13"/>
                    <HTMLAttribute name="align" value="middle"/>
                    <!--HTMLAttribute name="pattern" value="[a-zA-Z]{2}[0-9]{9}[a-zA-Z]{2}"/-->
                </elemento>
                
                <elemento tag="select" scope="EDT" id="AR.EdtControles#EtiquetaTipo" class="p edtCtrl FntDocEdt AR.EdtControles#EtiquetaTipo ">
                   <HTMLAttribute name="disabled" value="true"/> 
                   <elemento tag="option" scope="EDT" >
                        <HTMLAttribute name="value" value="AR.EdtControles#EtiquetaTipo.Carta"/>
                        Carta
                    </elemento>
                    <elemento tag="option" scope="EDT" >
                        <HTMLAttribute name="value" value="AR.EdtControles#EtiquetaTipo.SEDEX"/>
                        SEDEX
                    </elemento>
                </elemento>
                <elemento tag="button" scope="EDT" id="AR.EdtControles#Action" class="p edtCtrl FntDocEdt AR.EdtControles#Action">
                    <elemento tag="img" scope="EDT" id="AR.EdtControles#Action-Stamp">
                        <HTMLAttribute name="src" value="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsSAAALEgHS3X78AAAAB3RJTUUH0wkCFgswIuFYfgAAAD50RVh0Q29tbWVudABDcmVhdGVkIHdpdGggVGhlIEdJTVAKCihjKSAyMDAzIEpha3ViICdqaW1tYWMnIFN0ZWluZXInM+9YAAABTElEQVR42qWTzU7rMBCFv3Pm7rgPyaabri9RUSVA8JZ9iIQ2TRGo0rCwnZSfDVxLjuWj8ec5MzHANZC/nNcCMjP56ThNJ67+XvGnCbvdDocJGzuwXfdRVhlH1V10ADeAbZ4enwDx8HDP3f0dQmy3WwRsbm8B6LoOAeVzAYjwDAKhFnEZXUdKXwElbSGVWbQGWnRJGKHUVwuo+AdqsBHC1qzNWfkTIBwIiJYFYBnUYAug7YGlCw6X9Op6ebPlb218BNioWphvcoXNtfFixZ8AEYHUQLqACtlLUaWiL+7JzMy+73O1WmU/9DkMQz4Pz7nf7/NwOOQ4jjkdj/lyOuV6vc63t9c8n88J5IcuWCIcbDYbHKbrOrquw2H+3dyg+q/Isdhpb+E4jiS12sXo0kqBLKxWJ+FqTUBO0zT7kSBzaZtUgqkZqh5uXeF/n/M7RGR7qRmhEMIAAAAASUVORK5CYII="/>
                    </elemento>
                    <elemento tag="img" scope="EDT" class="Hidden" id="AR.EdtControles#Action-Refresh">
                        <HTMLAttribute name="src" value="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAnVJREFUeNqkU11IFFEU/mbccX9czcqtB0O28i+hDDeph8igQkWQivCp8CWpNXzRLKOHXsWKLGT3oUL6gaKoJCIo6M2HCA0ySltWpN3VVmx3WXfWcWZ3Zjozu01bS09e+Lj3nnvOued+37mMqqpYy2Au3m7611ZBcBOOEWqytm+EFwTvzm1NgdbGM+rg4w4MdY0zJlVVcoOvWyxMb3V1IbaUm1BczOrGREKpCc2nB3w+aUDbX3ty0ggwKX8SeJxOzt1Qb0Yg9BPhRegwHE1AXR0w+fEdjh+14/mY9DuBrM1DW51md2014PP/wIrAIBLhIAgsNIasFoUqEvWAHbUS4ssspPSqkaDcZmX7qyqBQDCCSLQAC2EOxG03oI6TjxznV28lEusOtTYXIhZLIsmLlEDIJlDS83wSV1+/kYg4k10jCkiPXDn16mu2evXCnf040e7Qg/mkSBVxRgLm3MiuPGlKLBuNdSg68z+dvff7F7q1ClBq2+zJSpc37Jb1TO7e0/Plr3NWVmSkFcnd1mZCSwurQ1uTDec7HkI7T8liBcFDULuGK0XCsNFIp29sR5G5VD180EysSygoYPH+AwcxJdzjV6OXyecIw2B0n2sTGurLKKGKR89mSQmp6m7vnJ+eIOuECCSdRlBGKgETn/lOm43tdJRZ0VjvgKKk8GkqiNnvAmJx8eZoX8Cvq6CVyqQZutmO6ZkSuBoy+h7Yu8F45/JyQp+n/TwWIyKphL6cTtQbCWNvg2h2dSG48BQlRSw4LtPGqZSCpZiIudAKREkefNAfvpRLotHKw2cn0OPdvSerRjvBkfVZIrzM9Acm837jWr/zLwEGABlsF651Nz3mAAAAAElFTkSuQmCC"/>
                    </elemento>
                </elemento>
                <elemento tag="div" scope="EDT" id="AR-EdtControles-maoPropria">
                    <HTMLAttribute name="style" value="display: flex;"/>
                    <elemento tag="div" scope="EDT">
                        <HTMLAttribute name="style" value="float:left;"/>
                        <elemento tag="input" scope="EDT" id="AR-EdtControles-maoPropria-inputCheck" class="">
                            <HTMLAttribute name="type" value="checkbox"/>
                        </elemento>
                    </elemento>
                    <elemento tag="div" scope="EDT">
                        <HTMLAttribute name="style" value="float:left;"/>
                        <elemento tag="span" scope="EDT" id="AR-EdtControles-maoPropria-label">
                            <elemento tag="p" scope="EDT" class="p FntDocEdt AlignJustify width100">
                                Aviso de Recebimeno em Mão Própria
                            </elemento>
                        </elemento>
                    </elemento>
                </elemento>                
                <!-- elemento tag="div" scope="EDT" id="AR-EdtControles-enderecoManual">
                    <HTMLAttribute name="style" value="display: flex; width:100%;"/>
                    <elemento tag="div" scope="EDT">
                        <HTMLAttribute name="style" value="float:left; width:100%;"/>
                        <elemento tag="textarea" scope="EDT" id="AR-EdtControles-enderecoManual-textarea" 
                                  class="p edtCtrl FntDocEdt width100 heightUnset resizeNone">
                            <HTMLAttribute name="Rows" value="4"/>
                            <HTMLAttribute name="placeholder" value="Inserir manualmente endereco do AR aqui"/>
                        </elemento>
                    </elemento>
                </elemento-->         
                <elemento tag="input" scope="EDT" id="AR-EdtControles-PLP" class="p edtCtrl FntDocEdt AlignCenter AR.EdtControles#Numero width100">
                    <HTMLAttribute name="type" value="text"/>
                    <HTMLAttribute name="placeholder" value="20220001234"/>
                    <HTMLAttribute name="maxlength" value="11"/>
                    <HTMLAttribute name="align" value="middle"/>
                    <!--HTMLAttribute name="pattern" value="[a-zA-Z]{2}[0-9]{9}[a-zA-Z]{2}"/-->
                </elemento>
                <elemento tag="input" scope="EDT" id="AR-EdtControles-dataPostagem" class="p edtCtrl FntDocEdt AlignCenter AR.EdtControles#Numero width100">
                    <HTMLAttribute name="type" value="date"/>
                    <HTMLAttribute name="placeholder" value="13/06/2022"/>
                    <HTMLAttribute name="align" value="middle"/>
                    <!--HTMLAttribute name="pattern" value="[a-zA-Z]{2}[0-9]{9}[a-zA-Z]{2}"/-->
                </elemento>
            </elemento>
        </versao>
    </classeDef>
    
    <classeDef id="AR.Footer">
        <versao id="4.0">
            <elemento tag="div" scope="EXP" id="AR.footer">
                <HTMLAttribute name="style" value="HEIGHT: 35px; BORDER-RIGHT: black 1px solid; WIDTH: 100%; BORDER-BOTTOM: black 1px solid; BORDER-LEFT: black 1px solid; DISPLAY: table"/>
                <!-- Col 1-->
                <elemento tag="div" scope="EXP" id="AR.footer.info1">
                    <HTMLAttribute name="style" value="HEIGHT: 100%; WIDTH: 50%; FLOAT: left"/>
                    
                    <elemento tag="div" scope="EXP">
                        <HTMLAttribute name="style" value="HEIGHT: 94%; WIDTH: 98%; PADDING-BOTTOM: 1%; PADDING-TOP: 1%; PADDING-LEFT: 1%; PADDING-RIGHT: 1%"/>
                        
                        <!-- Col 1, Line 2: Resp -->
                        <elemento tag="div" scope="EXP">
                            <HTMLAttribute name="style" value="WIDTH: 100%"/>
                            
                            <elemento tag="div" scope="EXP">
                                <HTMLAttribute name="style" value="WIDTH: 23%; FLOAT: left"/>
                                
                                <elemento tag="p" scope="EXP" class="p ar.fntFooter b">
                                    Processo:
                                </elemento>
                            </elemento>
                            <elemento tag="div" scope="EXP">
                                <HTMLAttribute name="style" value="WIDTH: 77%; FLOAT: left"/>
                                
                                <elemento tag="p" scope="EXP" class="p ar.fntFooter">
                                    #{j2.env.PJeVars.processo.numero}
                                </elemento>
                            </elemento>
                        </elemento>
                        
                        
                        <!-- Col 1, Line 2: Resp -->
                        <elemento tag="div" scope="EXP">
                            <HTMLAttribute name="style" value="HEIGHT: 50%; WIDTH: 100%"/>
                            
                            <elemento tag="div" scope="EXP">
                                <HTMLAttribute name="style" value="WIDTH: 23%; FLOAT: left"/>
                                
                                <elemento tag="p" scope="EXP" class="p ar.fntFooter b">
                                    Resp:
                                </elemento>
                            </elemento>
                            <elemento tag="div" scope="EXP">
                                <HTMLAttribute name="style" value="WIDTH: 77%; FLOAT: left"/>
                                
                                <elemento tag="p" scope="EXP" class="p ar.fntFooter">
                                    #{j2.env.PJeVars.usuario.respId}
                                </elemento>
                            </elemento>
                        </elemento>
                    </elemento>
                </elemento>
                
                
                
                
                <!-- Col 2-->
                <elemento tag="div" scope="EXP" id="AR.footer.info1">
                    <HTMLAttribute name="style" value="HEIGHT: 100%; WIDTH: 50%; FLOAT: left"/>
                    
                    <elemento tag="div" scope="EXP">
                        <HTMLAttribute name="style" value="HEIGHT: 94%; WIDTH: 98%; PADDING-BOTTOM: 1%; PADDING-TOP: 1%; PADDING-LEFT: 1%; PADDING-RIGHT: 1%"/>
                        
                        <!-- Col 2, Line 2: Expedição -->
                        <elemento tag="div" scope="EXP">
                            <HTMLAttribute name="style" value="WIDTH: 100%"/>
                            
                            <elemento tag="div" scope="EXP">
                                <HTMLAttribute name="style" value="WIDTH: 23%; FLOAT: left"/>
                                
                                <elemento tag="p" scope="EXP" class="p ar.fntFooter b">
                                    Expedição:
                                </elemento>
                            </elemento>
                            <elemento tag="div" scope="EXP">
                                <HTMLAttribute name="style" value="WIDTH: 77%; FLOAT: left"/>
                                
                                <elemento tag="p" scope="EXP" class="p ar.fntFooter">
                                    #{j2.env.PJeVars.data.dataEHoraAtual}
                                </elemento>
                            </elemento>
                        </elemento>
                        
                        
                        <!-- Col 2, Line 2: AR -->
                        <elemento tag="div" scope="EXP">
                            <HTMLAttribute name="style" value="HEIGHT: 50%; WIDTH: 100%"/>
                            
                            <elemento tag="div" scope="EXP">
                                <HTMLAttribute name="style" value="WIDTH: 23%; FLOAT: left"/>
                                
                                <elemento tag="p" scope="EXP" class="p ar.fntFooter b">
                                    AR:
                                </elemento>
                            </elemento>
                            <elemento tag="div" scope="EXP">
                                <HTMLAttribute name="style" value="WIDTH: 77%; FLOAT: left"/>
                                
                                <elemento tag="p" id="ar.footer.arNumero" scope="EXP" class="p ar.fntFooter">
                                    XXXNumeroARXXX
                                </elemento>
                            </elemento>
                        </elemento>
                    </elemento>
                </elemento>
            </elemento>
            
        </versao>
    </classeDef>        
    
    <classeDef id="AR.Header">
        <versao id="4.0">
            <elemento tag="div" scope="EXP" class="CenterAlign">
                <elemento tag="div" scope="EXP" id="AR.Header">
                    <HTMLAttribute name="style" value="HEIGHT: 119px; WIDTH: inherit"/>
                    <elemento tag="div" scope="EXP">
                        <HTMLAttribute name="style" value="WIDTH: 19%; FLOAT: left"/>
                        <elemento tag="img" scope="EXP" id="AR.Hedaer@Chancela">
                            <HTMLAttribute name="style" value="HEIGHT: auto; WIDTH: 30mm; PADDING-LEFT: 10px"/>
                            <HTMLAttribute name="src" value="data:image/png;base64,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"/>
                        </elemento>
                    </elemento>
                    <elemento tag="div" scope="EXP" >
                        <HTMLAttribute name="style" value="HEIGHT: 44px; WIDTH: 62%; FLOAT: left"/>
                        <elemento tag="p" scope="EXP" class="p AlignCenter b ARHeaderBrasao">
                            <elemento tag="img" scope="EXP">
                                <HTMLAttribute name="style" value="HEIGHT: 55px"/>
                                <HTMLAttribute name="src" value="https://sistemas.tjma.jus.br/sentinela/images/brasao.png"/>
                            </elemento>                            
                        </elemento>
                        <elemento tag="p" scope="EXP" class="p AlignCenter b ARHeaderEstado">
                            Estado do Maranhão
                        </elemento>
                        <elemento tag="p" scope="EXP" class="p AlignCenter b ARHeaderUnidade">
                            #{j2.env.modId.unidade.id}
                        </elemento>                                                
                    </elemento>
                    
                    <elemento tag="div" id="AR-Header-MP"  class="DivARMP Hidden" scope="EXP" >
                        <elemento tag="p" scope="EXP" class="p AlignCenter b ARHeaderUnidade FntARMP">
                            MP
                        </elemento> 
                    </elemento>
                    
                </elemento>
            </elemento>
        </versao>
    </classeDef>    
    
    <!-- AR DIGITAL -->
    <classeDef id="AR-CorreiosControl-digital-ARFull">
        <versao id="7.0">
            <textHTML scope="EXP"> 
                <data>
                    <![CDATA[
<table border="1" cellspacing="0" cellpadding="0" width="100%" style="border-collapse:collapse;border:none;/*min-width:210mm;*/">
<tbody>
<tr style="page-break-inside:avoid;height:1cm;">

<!--td rowspan="10" valign="top" style="width:3.56%;border:solid windowtext 1.5pt;border-right:dashed windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt;height:27.65pt;">
</td>
<td rowspan="10" valign="top" style="width:0.5%;border-top:dashed windowtext 1.5pt;border-left:none;border-bottom:solid windowtext 1.5pt;border-right:solid windowtext 1.5pt;height:27.65pt;">
</td-->

<td colspan="2" valign="top" style="width:34.24%;border-top: solid windowtext 1.5pt;border-left: solid windowtext 1.5pt;border-bottom:solid windowtext 1.5pt;height:27.65pt;border-right:none;">
<div style="position: relative;"><span style="position:absolute;left: 13.6px;top: 5.9px;zoom: 1;opacity: 1;/* display: none; */">
<div style="
    width: 0;
    height: 0;
    position: absolute;
    top: 0px;
    left: 15.3px;
    /* display: none; */
    /* opacity: 0.5; */
    border-top: 7.7px solid black;
    border-right: 6.1px solid transparent;
    border-left: 6.1px solid transparent;
">
<span style="
    position: absolute;
">&nbsp;</span>
</div><div style="
    width: 0;
    height: 0;
    position: absolute;
    top: 16.1px;
    left: 7.5px;
    /* display: none; */
    /* opacity: 0.4; */
    border-bottom: 7.7px solid black;
    border-right: 6.1px solid transparent;
    border-left: 6.1px solid transparent;
">
<span style="
    position: absolute;
">&nbsp;</span>
</div><div style="
    width: 0;
    height: 0;
    position: absolute;
    top: 8.4px;
    left: 0px;
    border-bottom: 9.1px solid #353334 !important;
    border-left: 2.1px solid transparent !important;
    border-right: 7.1px solid transparent !important;
    width: 10px;
    transform: rotate(308deg);
    /* display: none; */
    /* opacity: 0.2; */
">
<span style="
    position: absolute;
">&nbsp;</span>
</div><div style="
    width: 0;
    height: 0;
    position: absolute;
    top: 6.4px;
    left: 16px;
    border-bottom: 9.1px solid #353334 !important;
    border-left: 2.1px solid transparent !important;
    border-right: 7.1px solid transparent !important;
    width: 10px;
    /* display: none; */
    /* opacity: 0.2; */
    transform: scaleX(-1) scaleY(-1) rotate(308deg);
">
<span style="
    position: absolute;
">&nbsp;</span>
</div>
</span><p class="" style="margin:0px;line-height:1;font-family: &quot;Trebuchet MS&quot;, Calibri, Arial, sans-serif;position: absolute;top: 11.1px;left: 187.4px;">
<span style="font-size: 15.4pt;font-weight: bold;">Digital</span>
</p><p class="" style="margin:0px;line-height:1;font-family: &quot;Trebuchet MS&quot;, Calibri, Arial, sans-serif;position: absolute;top: 12.4px;left: 47.4px;font-size: 7.5pt;line-height: 90%;">
<span style="font-weight: bold;">AVISO DE</span><br>
<span style="
">RECEBIMENTO</span>

</p><div id="trapezoid" style="
    border-bottom: 36px solid #e6e8e7 !important;
    border-left: 0px solid transparent !important;
    border-right: 29px solid transparent !important;
    width: 244px;
"><span style="
    position: absolute;
">&nbsp;</span>
    
</div></div>
</td>
<td colspan="2" valign="top" style="min-width:188px;border-top: solid windowtext 1.5pt;border-left:none;border-bottom:solid windowtext 1.5pt;border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:27.65pt;">
<p class="" align="center" style="margin: 3px 35pt 0.0001pt 0cm;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 6pt;">
AC CENTRAL DE SÃO LUIS/MA</span>
</p>
<p class="" align="center" style="margin:0cm 35pt 0.0001pt 0cm;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 6pt;">#{j2.mod.clsCnstr.AR.vars.dataPostagem.dateISOtoBR}</span>
</p>
<p class="" align="center" style="margin:0cm 35pt 0.0001pt 0cm;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 6pt;">#{j2.mod.clsCnstr.AR.vars.PLP}</span>
</p>
</td>
<td rowspan="2" valign="top" style="width:75px;min-width:75px;border:none;border-top: solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt;align-content:flex-end;">
<span style="position:absolute;z-index:251659264;margin-left:5px;margin-top:2px;/* height:67px ;*/ ">
<span style="position:absolute;left:15.6px;top:1px;zoom:1.08;">
<div style="width:0px;height:0px;line-height:0px;border-bottom: 27.7px solid black;border-right: 16px solid transparent;border-left: 16px solid transparent;"><span style="
    position: absolute;
">&nbsp;</span>
<div style="position:absolute;margin: 2.4px 0px 0px -13.3px;width:0px;height:0px;line-height:0px;border-bottom: 24.1px solid white;border-left: 13.2px solid transparent;border-right: 13.2px solid transparent;/* border-top: 0px solid transparent; */">
<span style="
    position: absolute;
">&nbsp;</span></div>
</div>
</span>
<p align="center" style="margin:0px;text-align:center;line-height:normal;position:absolute;top:15.3px;left:26.6px;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:8.2pt;font-weight:bold;">
AR</span>
</p>
<p class="" align="center" style="margin:0px;text-align:center;line-height:normal;position:absolute;top:31.2px;left: 2.6px;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 4.2pt;">
9912319221/2018/DR-MA</span>
</p>
<p class="" align="center" style="text-align:center;line-height:normal;position:absolute;top: 38px;left:1px;font-family:'Trebuchet MS', Arial, sans-serif;margin:0px;">
<b>
<span style="font-size:4.5pt;">
TRIBUNAL DE JUSTIÇA DO MA</span>
</b>
</p>
<img width="32" height="7" src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAEsAAAAPCAMAAAHsXvI0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAIrUExURf///3d3dywsLCcnJyYmJiAgIBwcHIyMjN/f31hYWCsrKyUlJSEhIR0dHUpKSo6OjoSEhPPz8/39/S8vLyQkJIODg4iIiH5+fvv7+/Dw8CIiIn19fXx8fIGBgY+Pj8rKynNzc25ubnR0dHt7e4KCgoqKiqampt3d3c/Pz9LS0tTU1NbW1vb29ru7u2RkZGpqanBwcIuLi8TExP7+/jIyMmxsbPLy8ufn58fHx8zMzNXV1erq6uPj41ZWVl5eXmVlZXFxcTY2NklJSWNjY1FRUTMzM+vr6+zs7Pj4+PX19fz8/PT09La2tr+/v8PDw8nJyc3NzdnZ2UxMTFNTU1lZWWtra3p6euXl5aSkpF1dXeTk5ERERFVVVTw8PMHBwaurq7Kysre3t8DAwMXFxcjIyMvLy9HR0UdHR01NTVJSUl9fX29vb5qamp6enjk5OYeHh5KSkldXV62trZOTkzQ0NPn5+aenp2lpaYaGhjc3N7S0tKCgoKqqqrOzs7y8vD09PU5OTltbW+Hh4Z2dnUFBQTU1NUtLS1paWqysrO3t7aKiorW1tbq6usLCwpmZmfHx8enp6VBQUK+vr7CwsO7u7jg4OO/v78bGxqWlpa6urnV1dZycnOjo6Do6OkBAQEVFRZubm/r6+s7OzoCAgGZmZkhISHZ2dmhoaImJiUZGRkJCQtzc3Nvb25aWlpeXl+bm5rGxsTs7Oz4+Pvf392JiYlRUVENDQ2dnZwAAAFfxLC4AAAC5dFJOU/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8AQAvpHgAAAAlwSFlzAAAh1QAAIdUBBJy0nQAAAZ9JREFUKFONU8t1AyEMFBeXwEENcKIAClAVUinUwIkSKDQzLHYSPyf27PLTaqXRBxHJGBfaGjZEehfRI5LqIi6QEC2dzQM9YTI8Mfe5cdLb3v/G+vZzobYIKSIjh12AbJ2PJh1WPRUIN1QzXf2D2VqbsRbUzEHnIvSM0ns7XzpXhKchs08zNUYvTiKgkjNPhDMHIUtmhe0AuWlV0qGW9KYI4x1M83MGXiGlN2q1lVZiJZCzhTK9DLPX2kB5IZ1k2ayq2LA0fKjE8mQrm4xe7yFSC6NO1nLXwnFkCVCgSmeEY12N4v0AAQZ4AzxSHodLtbSz49QJjiuF9+ISYao3H5+k5D2mKvP2UYL/QmlMbCnowZVobbdyQluk1530N3pFK8IcKoASwBqFaqdJJvpMeY+QAimmLlXRexCgEdFNlCD1WJvU0WEMtUzmMBZrUxl6GF2dikoxyVPZnfyXs8VU+q02/HhuNNYvNg+UrQVcfw6bD1tqDq+onMXYjrZOg5D73hFZztD7AQd5w20Ae2fAtFUMwRaz2DxwfToN20IY7hZfdFZ+qqOMe1kAAAAASUVORK5CYII=" style="position:absolute;top:53px;left:18px;">
<span style="height:1.7cm;width:1.7cm;background-color:transparent;border-radius:50%;display:inline-block;border:1.5pt solid black;">
</span>
</span>
</td>
<td width="20.5%" valign="top" style="min-width: 27.2%;width: 32%;border-top: solid windowtext 1.5pt;border-left:none;border-bottom:solid windowtext 1.5pt;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt;">
<table border="0" cellspacing="0" cellpadding="0" align="left" width="30%" style="border-collapse:collapse;border:none;margin-right:auto;margin-left:auto;width:100%;">
<tbody>
<tr>

<td style="border:none;">
<p class="" style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;text-align: center;">
<b>
<span style="font-size:19pt;">
MAJ</span>
</b>
<b>
<span style="font-size:1pt;">
</span>
</b>
</p>
</td>

<td style="border:none;">
<p class="" style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;text-align: center;">
<b>
<span style="font-size:19pt;display: #{j2.mod.clsCnstr.AR.vars.MP.cssRule}">MP</span>
</b>

</p>
</td>
</tr>








</tbody>
</table>
</td>
<!--td rowspan="10" valign="top" style="width:0.5%;border-top:dashed windowtext 1.5pt;border-left:none;border-bottom:solid windowtext 1.5pt;border-right:dashed windowtext 1.5pt;">
</td>
<td rowspan="10" valign="top" style="width:3.56%;border:solid windowtext 1.5pt;border-left:none;padding:0cm 5.4pt 0cm 5.4pt;">
</td-->
</tr>
<tr style="page-break-inside:avoid;height:1.2cm;">
<td rowspan="2" valign="top" style="width: 29.24%;border:none;padding:0cm 5.4pt 0cm 5.4pt;border-left: solid windowtext 1.5pt;">
<p class="" style="margin:0px;line-height:1;font-family:'Trebuchet MS', Arial, sans-serif;">
<b>
<span style="font-size:9pt;">
DESTINATÁRIO</span>
</b>
<span style="font-size:10.0pt;">
:</span>
</p>
<p class="" style="margin:0px;line-height:1;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:9pt;">#{j2.mod.clsCnstr.AR.vars.destinatario.AREndElements}</span>
</p>

<!-- p class="" style="margin:0px;line-height:1;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:9pt;">
MARCANÃ</span>
</p-->

<p class="" style="margin:6px 0 0;line-height:1;font-family:'Trebuchet MS', Arial, sans-serif;">
<b>
<span style="font-size:12pt;">#{j2.mod.clsCnstr.AR.vars.destinatario.CEP}</span>
</b>

<span style="font-size:9pt;">#{j2.mod.clsCnstr.AR.vars.destinatario.cidade}/#{j2.mod.clsCnstr.AR.vars.destinatario.UF}</span>

</p>

</td>
<td rowspan="2" valign="top" style="width:8.88%;border:none;border-right:solid windowtext 1.5pt;padding:3mm 3mm 0cm 0;" width="8%">

<p class="" align="right" style="margin:0px;text-align:right;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span>


<img src="https://products.aspose.app/barcode/embed/image.Png?BarcodeType=DataMatrix&amp;Content=#{j2.mod.clsCnstr.AR.vars.AR_AA}MAJ&amp;TextLocation=None&amp;Height=62&amp;Width=62&amp;DataMatrix.DataMatrixEcc=Ecc200&amp;DataMatrix.DataMatrixEncodeMode=ASCII" style="
    width: 50px;
">
</span>
<span style="font-size:10.0pt;">
</span>
</p>
</td>
<td colspan="2" valign="top" style="width:23.48%;border:none;padding:0cm 0pt 0cm 5.4pt;" width="23%" rowspan="2">
<p class="" style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<b>
<span style="font-size:8.0pt;">
TENTATIVAS DE ENTREGA</span>
</b>
</p>
<p class="" style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:4pt;">
&nbsp;</span>
</p>
<p class="" style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 7.7pt;">
1ª _____/_____/_____ <span>
&nbsp;</span>
<span>
&nbsp;</span>
____<span class="GramE">
_:_</span>
____h</span>
</p>
<p class="" style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 8pt;">
&nbsp;</span>
</p>
<p class="" style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 7.7pt;">
2ª _____/_____/_____ <span>
&nbsp;</span>
<span>
&nbsp;</span>
____<span class="GramE">
_:_</span>
____h</span>
</p>
<p class="" style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:8.0pt;">
&nbsp;</span>
</p>
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 7.7pt;">
3ª _____/_____/_____ <span>
&nbsp;</span>
<span>
&nbsp;</span>
____<span class="GramE">
_:_</span>
____h</span>
</p>
</td>
<td rowspan="5" valign="top" style="width: 20.2%;border:solid windowtext 1.5pt;border-top:none;padding:0cm 5.4pt 0cm 5.4pt;">
<p align="center" style="margin:0px;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
CARIMBO<br>
UNIDADE DE ENTREGA</span>
<span style="font-size:14.0pt;">
</span>
</p>
</td>
</tr>
<tr style="page-break-inside:avoid;height:1.5cm;">
<td valign="top" style="border:none;border-right:solid windowtext 1.5pt;padding-left:10px;">
<p align="center" style="margin:0px;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<b>
<span style="font-size:7pt;">
ATENÇÃO</span>
</b>
<span style="font-size:6.0pt;">
:</span>
</p>
<p align="center" style="margin:0px;text-align:center;line-height:1;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:7pt;">
Após a 3ª<br>
tentativa,<br>
devolver o<br>
objeto.</span>
</p>
</td>
</tr>
<tr style="page-break-inside:avoid;">
<td colspan="2" rowspan="2" valign="top" style="border-top:none;border-left: solid windowtext 1.5pt;border-bottom:solid windowtext 1.5pt;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt;height:2.2cm;">
<p align="center" style="margin:0px;text-align:center;line-height:1;font-family:'Trebuchet MS', Arial, sans-serif;margin-top:15px;">
<span style="font-size:12pt;">#{j2.mod.clsCnstr.AR.vars.AR_AA}</span>
</p>
<p align="center" style="margin:0px;text-align:center;line-height:1;font-family:'Trebuchet MS', Arial, sans-serif;">
<span>
<img src="https://products.aspose.app/barcode/embed/image.Png?BarcodeType=Code128&amp;Content=#{j2.mod.clsCnstr.AR.vars.AR}&amp;Height=60&amp;Width=325&amp;TextLocation=none" name="Figura2" width="" style="width:62mm;">
</span>
<span style="font-size:13.0pt;">
</span>
</p>
</td>

</tr>
<tr style="page-break-inside:avoid;height:62.7pt;">
<td colspan="3" rowspan="3" valign="top" style="border-top:none;border-left:none;border-bottom:solid windowtext 1.5pt;border-right:solid windowtext 1.5pt;padding:0 5.4pt 0cm 5.4pt;height:62.7pt;">
<p style="margin:0px 0 14px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:8.0pt;">
MOTIVO DA DEVOLUÇÃO</span>
</p>


<table class="MsoTableGrid" border="0" cellspacing="0" cellpadding="0" align="left" width="30%" style="border-collapse:collapse;border:none;margin-right:auto;margin-left:auto;width:100%;">
<tbody>
<tr>
<td style="width:6.58%;border:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt">
<p align="center" style="margin:0px;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
1</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
<td style="width: 55.42%;border:none;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 7pt;">
Mudou-se</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
<td style="width:6.64%;border:solid windowtext 1.5pt;border-left:none;padding:0cm 5.4pt 0cm 5.4pt">
<p align="center" style="margin:0px;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
5</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
<td style="width: 31.36%;border:none;padding:0cm 5.4pt 0cm 5.4pt">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 7pt;">
Recusado</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
</tr>
<tr style="height:5px;">


</tr>
<tr>
<td width="6%" style="width:6.58%;border:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt">
<p align="center" style="margin:0px;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
2</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
<td width="43%" style="width:43.42%;border:none;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 7pt;">
Endereço Insuficiente</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
<td width="6%" style="width:6.64%;border:solid windowtext 1.5pt;border-left:none;padding:0cm 5.4pt 0cm 5.4pt">
<p align="center" style="margin:0px;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
6</span>
<span>
</span>
</p>
</td>
<td width="43%" style="width:43.36%;border:none;padding:0cm 5.4pt 0cm 5.4pt">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 7pt;">
Não Procurado</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
</tr>
<tr style="height:5px;">


</tr>
<tr>
<td width="6%" style="width:6.58%;border:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt">
<p align="center" style="margin:0px;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
3</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
<td width="43%" style="width:43.42%;border:none;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 7pt;">
Não Existe o Número</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
<td width="6%" style="width:6.64%;border:solid windowtext 1.5pt;border-left:none;padding:0cm 5.4pt 0cm 5.4pt">
<p align="center" style="margin:0px;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
7</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
<td width="43%" style="width:43.36%;border:none;padding:0cm 5.4pt 0cm 5.4pt">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 7pt;">
Ausente</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
</tr>
<tr style="height:5px;">


</tr>
<tr>
<td width="6%" style="width:6.58%;border:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt">
<p align="center" style="margin:0px;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
4</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
<td width="43%" style="width:43.42%;border:none;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 7pt;">
Desconhecido</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
<td width="6%" style="width:6.64%;border:solid windowtext 1.5pt;border-left:none;padding:0cm 5.4pt 0cm 5.4pt">
<p align="center" style="margin:0px;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
8</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
<td width="43%" style="width:43.36%;border:none;padding:0cm 5.4pt 0cm 5.4pt">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 7pt;">
Falecido</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
</tr>
<tr style="height:5px;">


</tr>
<tr style="border:none;">
<td width="6%" style="width:6.58%;border:solid black 1.5pt;padding:0cm 5.4pt 0cm 5.4pt">
<p align="center" style="margin:0px;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
9</span>
<span style="font-size:8.0pt;">
</span>
</p>
</td>
<td width="93%" colspan="3" style="width:93.42%;padding:0cm 5.4pt 0cm 5.4pt ">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size: 7pt;">
Outros_________________________________________</span>
<span style="font-size:5.0pt;">
</span>
</p>
</td>
</tr>
</tbody>
</table>
</td>

</tr>
<tr style="page-break-inside:avoid;">
<td colspan="2" rowspan="2" valign="top" style="border-top:none;border-left: solid windowtext 1.5pt;border-bottom:solid windowtext 1.5pt;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt;height:0.88cm;">
<p style="margin:3px 0 0;line-height:1;font-family:'Trebuchet MS', Arial, sans-serif;">
<b>
<span style="font-size: 8pt;">
ENDEREÇO PARA DEVOLUÇÃO DO AR</span>
</b>
</p>
<p style="margin: 4px 0 0;line-height:1;font-family:'Trebuchet MS', Arial, sans-serif;">
<b>
<span style="font-size: 7pt;">
Centralizador Regional</span>
</b>

</p>
</td>
</tr>
<tr style="page-break-inside:avoid;height:19.4pt;">
<td width="20%" rowspan="4" valign="top" style="width:20.2%;border-top:none;border-left:none;border-bottom:solid windowtext 1.5pt;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt;height:19.4pt;">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
RUBRICA E MATRÍCULA DO CARTEIRO</span>
<span style="font-size:14pt;">
</span>
</p>
</td>
<td style="height:19.4pt;border:none" width="0" height="26">
</td>
</tr>
<tr style="page-break-inside:avoid;height:0.75cm;">
<td colspan="5" valign="top" style="border-top:none;border-left: solid windowtext 1.5pt;border-bottom:solid windowtext 1.5pt;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt;">
<div style="display: grid;">

<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
<span style="font-size:6pt;">
PARA USO EXCLUSIVO DO REMETENTE (OPCIONAL):
#{j2.mod.clsCnstr.AR.vars.descricaoConteudo}
</span>
</p>


<p style="margin: 3px 0 0;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
<span style="font-size:6pt;">#{j2.env.PJeVars.processo.numero} - #{j2.env.PJeVars.partes.ativa.nome.pad20} X #{j2.env.PJeVars.partes.passiva.nome.pad20} | #{j2.env.PJeVars.data.dataEHoraAtual} #{j2.env.PJeVars.usuario.respId}</span>
</p>

</div>

</td>
</tr>
<tr style="page-break-inside:avoid;height:0.75cm;">
<td colspan="3" valign="top" style="border-top:none;border-left: solid windowtext 1.5pt;border-bottom:solid windowtext 1.5pt;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt;">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
ASSINATURA DO RECEBEDOR</span>
<span style="font-size:14pt;">
</span>
</p>
</td>
<td colspan="2" valign="top" style="border-top:none;border-left:none;border-bottom:solid windowtext 1.5pt;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt;">
<p style="margin:0px;line-height:normal;position:absolute;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
DATA DE ENTREGA</span>
</p>
<p align="center" style="margin: 8px  0 0;text-align:center;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="
    font-size: 10pt;
">
_______/_______/_______</span>
</p>
</td>
</tr>
<tr style="page-break-inside:avoid;height:0.75cm;">
<td colspan="3" valign="top" style="border-top:none;border-left: solid windowtext 1.5pt;border-bottom:solid windowtext 1.5pt;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt;">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
NOME LEGÍVEL DO RECEBEDOR</span>
<span style="font-size:14pt;">
</span>
</p>
</td>
<td colspan="2" valign="top" style="border-top:none;border-left:none;border-bottom:solid windowtext 1.5pt;border-right:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt;">
<p style="margin:0px;line-height:normal;font-family:'Trebuchet MS', Arial, sans-serif;">
<span style="font-size:6pt;">
Nº DOCUMENTO DE IDENTIDADE</span>
<span style="font-size:14pt;">
</span>
</p>
</td>
</tr>
</tbody>
</table>
                    ]]>
                </data>    
            </textHTML>
        </versao>
    </classeDef>
    
    <classeDef id="AR-CorreiosControl-digital-Etiqueta">
        <versao id="7.0">
            <textHTML scope="EXP"> 
                <data>
                    <![CDATA[
<table width="397" cellpadding="0" cellspacing="0" style="border: none;border-collapse: collapse;">
	<colgroup><col width="19">

	<col width="72">

	<col width="98">

	<col width="94">

	<col width="1">

	<col width="94">

	<col width="19">

	</colgroup><tbody><tr style="" valign="top">
		<td width="19" style="border: none; padding: 0cm">
		</td>
		<td colspan="3" width="265" style="border: none;padding: 3px 3px 3px;"><p align="left" style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 7pt;">
			<b>Remetente:
			</b><span style="">2º
			JUIZADO ESPECIAL CÍVEL DE IMPERATRIZ</span></p>
			<p align="left" style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 7pt;" century=""><span style="">Avenida
			Prudente de Moraes, s/n</span></p>
			<p align="left" style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 7pt;" century=""><span style="">FACIMP
			| Wyden, Parque Santa Lúcia</span></p>
			<p align="left" style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 7pt;" century=""><span style="">65912-901
			Imperatriz/MA</span></p>
		</td>
		<td rowspan="3" colspan="2" width="94" style="border: none; padding: 0cm">
			<div style="
    margin: auto;
    width: 94;
"><span style="
  position:
  absolute;z-index:251659264;
  margin-left: 3px;
  margin-top: 7px;
  /* width:67px; */
  /* height:67px
  ; */
  /* zoom: 1.2; */
  ">

<span style="position: absolute;left: 15.6px;top: 1px;zoom: 1.08;display: none;">

<div style="border-color: transparent transparent black transparent;border-width: 0px 16px 27.7px;border-style: solid;width: 0px;height: 0px;line-height: 0px;"><div style="border-color: transparent transparent rgb(255, 255, 255);border-width: 2px 13.2px 22.2px;position: absolute;margin: 1.7px 0px 0px -13.2px;border-style: solid;width: 0px;height: 0px;line-height: 0px;"></div></div></span><span style="
  font-size: 11.5pt;
  mso-bidi-font-size:11.0pt;
  font-family:
  'Trebuchet MS', Arial, sans-serif;
  position: absolute;
  left: 21.2px;
  top: 13.3px;
  font-weight: bold;
  ">Carta<o:p></o:p></span><p class="MsoNormal" align="center" style="margin-bottom:0cm;
  text-align:
  center;
  line-height:
  normal;
  position: absolute;
  top: 21.8px;
  left: 2.7px;
  "><span style="
  font-size: 5.5pt;
  mso-bidi-font-size:4.0pt;
  font-family:
  &quot;Trebuchet MS&quot;,sans-serif
  ">9912319221/2018/DR-MA<o:p></o:p></span></p><p class="MsoNormal" align="center" style="
  text-align:
  center;
  line-height:
  normal;
  position: absolute;
  top: 32.8px;
  left: -0.4px;
  "><b style=""><span style="font-size: 5pt;font-family:&quot;Trebuchet MS&quot;,sans-serif">TRIBUNAL DE
  JUSTIÇA DO MA<o:p></o:p></span></b></p>
  
  <img src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAEsAAAAPCAMAAAHsXvI0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAIrUExURf///3d3dywsLCcnJyYmJiAgIBwcHIyMjN/f31hYWCsrKyUlJSEhIR0dHUpKSo6OjoSEhPPz8/39/S8vLyQkJIODg4iIiH5+fvv7+/Dw8CIiIn19fXx8fIGBgY+Pj8rKynNzc25ubnR0dHt7e4KCgoqKiqampt3d3c/Pz9LS0tTU1NbW1vb29ru7u2RkZGpqanBwcIuLi8TExP7+/jIyMmxsbPLy8ufn58fHx8zMzNXV1erq6uPj41ZWVl5eXmVlZXFxcTY2NklJSWNjY1FRUTMzM+vr6+zs7Pj4+PX19fz8/PT09La2tr+/v8PDw8nJyc3NzdnZ2UxMTFNTU1lZWWtra3p6euXl5aSkpF1dXeTk5ERERFVVVTw8PMHBwaurq7Kysre3t8DAwMXFxcjIyMvLy9HR0UdHR01NTVJSUl9fX29vb5qamp6enjk5OYeHh5KSkldXV62trZOTkzQ0NPn5+aenp2lpaYaGhjc3N7S0tKCgoKqqqrOzs7y8vD09PU5OTltbW+Hh4Z2dnUFBQTU1NUtLS1paWqysrO3t7aKiorW1tbq6usLCwpmZmfHx8enp6VBQUK+vr7CwsO7u7jg4OO/v78bGxqWlpa6urnV1dZycnOjo6Do6OkBAQEVFRZubm/r6+s7OzoCAgGZmZkhISHZ2dmhoaImJiUZGRkJCQtzc3Nvb25aWlpeXl+bm5rGxsTs7Oz4+Pvf392JiYlRUVENDQ2dnZwAAAFfxLC4AAAC5dFJOU/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8AQAvpHgAAAAlwSFlzAAAh1QAAIdUBBJy0nQAAAZ9JREFUKFONU8t1AyEMFBeXwEENcKIAClAVUinUwIkSKDQzLHYSPyf27PLTaqXRBxHJGBfaGjZEehfRI5LqIi6QEC2dzQM9YTI8Mfe5cdLb3v/G+vZzobYIKSIjh12AbJ2PJh1WPRUIN1QzXf2D2VqbsRbUzEHnIvSM0ns7XzpXhKchs08zNUYvTiKgkjNPhDMHIUtmhe0AuWlV0qGW9KYI4x1M83MGXiGlN2q1lVZiJZCzhTK9DLPX2kB5IZ1k2ayq2LA0fKjE8mQrm4xe7yFSC6NO1nLXwnFkCVCgSmeEY12N4v0AAQZ4AzxSHodLtbSz49QJjiuF9+ISYao3H5+k5D2mKvP2UYL/QmlMbCnowZVobbdyQluk1530N3pFK8IcKoASwBqFaqdJJvpMeY+QAimmLlXRexCgEdFNlCD1WJvU0WEMtUzmMBZrUxl6GF2dikoxyVPZnfyXs8VU+q02/HhuNNYvNg+UrQVcfw6bD1tqDq+onMXYjrZOg5D73hFZztD7AQd5w20Ae2fAtFUMwRaz2DxwfToN20IY7hZfdFZ+qqOMe1kAAAAASUVORK5CYII=" style="
    position: absolute;
    top: 66.2px;
    left: 20.2px;
    width: 44.5px;
">


<span style="
    height: 2.2cm;
    width: 2.2cm;
    background-color: transparent;
    border-radius: 50%;
    display: inline-block;
    border: 1.5pt solid black;
    "></span></span></div>
			<p align="center" style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 6pt;margin-top: 97px;"><span style="font-weight: normal">Data
			de Postagem</span></p>
			<p align="center" style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 6pt;"><span style="font-weight: normal">#{j2.mod.clsCnstr.AR.vars.dataPostagem.dateISOtoBR}
</span></p>
		</td>
		<td width="19" style="border: none; padding: 0cm"><p align="left"><br>

			</p>
		</td>
	</tr>
	<tr style="background: transparent" valign="top">
		<td rowspan="3" width="19" style="border: none; padding: 0cm">
		</td>
		<td width="72" style="border: none; padding: 0cm"></td>
		<td colspan="2" width="192" style="border: none; padding: 0cm">
			<!--img src="Sem%20t%C3%ADtulo%201_html_1b5341d472d3e007.png" name="Figura4" align="left" width="186" height="16" style="
    /* display: none; */
"-->
<img src="https://products.aspose.app/barcode/embed/image.Png?BarcodeType=Postnet&amp;Content=#{j2.mod.clsCnstr.AR.vars.destinatario.CEP}&amp;TextLocation=None&amp;DimensionX=2.4&amp;BarHeight=50" name="Figura4" align="left" width="190" height="16" style="
">

  

</td>
		<td rowspan="3" width="19" style="border: none; padding: 0cm">
		</td>
	</tr>
	<tr style="background: transparent" valign="top">
		<td width="72" style="border: none; padding: 0cm">
			<img src="https://products.aspose.app/barcode/embed/image.Png?BarcodeType=DataMatrix&amp;Content=#{j2.mod.clsCnstr.AR.vars.dataMatrix}&amp;TextLocation=None&amp;DataMatrix.DataMatrixEcc=Ecc200&amp;DataMatrix.DataMatrixEncodeMode=ASCII
" align="certer" style="
    width: 74px;
">
  

</td>
		<td colspan="2" width="192" style="border: none; padding: 0cm"><p align="left" style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 8pt;">
			<span style=""><b>Destinatário:</b></span></p>
			<p align="left" style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 8pt;">
<span style="font-weight: normal">#{j2.mod.clsCnstr.AR.vars.destinatario.AREndElements}
</span></p>
			
			
			
			<p align="left" style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 8pt;">
<span style="font-style: normal">
<b>#{j2.mod.clsCnstr.AR.vars.destinatario.CEP}</b></span>
<span style="font-weight: normal">#{j2.mod.clsCnstr.AR.vars.destinatario.cidade}/#{j2.mod.clsCnstr.AR.vars.destinatario.UF}</span>
</p>
		</td>
	</tr>
	<tr style="background: transparent" valign="top">
		<td rowspan="1" width="72" style="border: none; padding: 0cm"></td>
		<td colspan="2" width="192" style="border: none;" rolspan="2"><p align="left" style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 8pt;margin-top: 4pt;">
			<span style="font-style: normal"><b>Obs:</b>#{j2.mod.clsCnstr.AR.vars.descricaoConteudo.pad20} - #{j2.env.PJeVars.processo.numero} - #{j2.env.PJeVars.partes.ativa.nome.pad20}x #{j2.env.PJeVars.partes.passiva.nome.pad20} | #{j2.env.PJeVars.data.dataEHoraAtual} #{j2.env.PJeVars.usuario.respId}</span></p>
		</td><td width="94" style="border: none;padding: 0cm;vertical-align: middle;"><p align="left" style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 11pt;">
			<span style=""><b>AR
</b></span><span style="
    display: #{j2.mod.clsCnstr.AR.vars.MP.cssRule}
"><b> - MP</b></span></p>
		</td>
	</tr>
	
	<tr style="background: transparent" valign="top">
		<td width="19" style="border: none; padding: 0cm"><p align="left"><br>

			</p>
		</td>
		<td colspan="5" width="359" style="border: none; padding: 0cm">
			
			<p align="center" style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 8pt;margin-top: 5px;"> <span style=""><b>#{j2.mod.clsCnstr.AR.vars.AR}
</b></span></p>
			<p align="center" style="margin: 0;line-height: normal;"><!--img src="Sem%20t%C3%ADtulo%201_html_97b6dd61642f324e.png" name="Figura2" width="309" height="55"-->

<img src="https://products.aspose.app/barcode/embed/image.Png?BarcodeType=Code128&amp;Content=#{j2.mod.clsCnstr.AR.vars.AR}&amp;Height=60&amp;Width=325&amp;TextLocation=none" name="Figura2" width="">
  

<br>

			</p>
		</td>
		<td width="19" style="border: none; padding: 0cm"><p align="left"><br>

			</p>
		</td>
	</tr>
	<tr style="background: transparent;vertical-align: middle;">
		<td width="19" style="border: none; padding: 0cm">
		</td>
		<td colspan="5" width="359" style="
    padding: 0px;
"><p align="left" style="margin: 0;line-height: 1;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 9pt;/* margin-bottom: 0px; *//* margin-top: 0px; */">
			<span style="font-style: normal"><b>Recebedor:
			__________________________________________</b></span></p>
		</td>
		<td width="19" style="border: none; padding: 0cm">
		</td>
	</tr>
	<tr style="vertical-align: middle;">
		<td width="19" style="">
		</td>
		<td colspan="2" width="170" style="border: none;padding: 0cm;"><p style="margin: 0;line-height: normal;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 9pt;margin-block: 0;">
			<span style=""><b>Assinatura:________________</b></span></p>
		</td>
		<td colspan="3" width="189" style="border: none;padding: 0cm;margin: 0;"><p align="left" style="margin: 0;line-height: 1.0;font-family: 'Trebuchet MS', Arial, sans-serif;font-size: 9pt;">
			<span style=""><b>Documento:_________________</b></span></p>
		</td>
		<td width="19" style="border: none; padding: 0cm">
		</td>
	</tr>
</tbody></table>
                    ]]>
                </data>    
            </textHTML>
        </versao>
    </classeDef>    
    
</Definitions>
"
};
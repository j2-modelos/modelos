window.j2.res.XML.unidadesAutorizadas.xmlEncode = {      
  load : "<?xml version="1.0" encoding="UTF-8"?>
<!-- 
 ASS: Usufruto
 DOC: 5429217
 MOD: UnidadesAutorizadas
  
 Definiçoes para unidades que utilizam modelos e demais configurações
-->
<Definitions id="UnidadesAutorizados" targetNamespace="http://j2" xmlns="http://j2" xsi:schemaLocation='http://j2 ../XML/j2.xsd' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'>
    <Unidade id="2º Juizado Especial Cível de Imperatriz" genr="M" comarca="Imperatriz" 
             comarcaGenr="M" nomeFormal="2º Juizado Especial Cível" uuid="63fc3d6b-0794-4179-9628-d46409bf3486">
        <competencias>
            <competencia id="juizadoCivel" />
            <!--competencia id="civel" /-->
        </competencias>
        <modelosAut>
            <!--modeloAut id="Citação" versao="3.1"/>-->
            <modeloAut id="j2Alvara" versao="3.0"/>
            <modeloAut id="j2AtoOrdinatorio" versao="3.0"/>
            <modeloAut id="j2CartaPrecatoria" versao="3.0"/>
            <modeloAut id="j2Certidao" versao="3.1"/>
            <modeloAut id="j2CertidaoDaContadoria" versao="3.0"/>
            <modeloAut id="j2CertidaoDeDivida" versao="3.0"/>
            <modeloAut id="j2CertidaoDaContadoria" versao="3.0"/>
            <modeloAut id="j2Citacao" versao="3.3"/>
            <modeloAut id="j2Despacho" versao="3.0"/>
            <modeloAut id="j2Diligencia" versao="3.0"/>
            <modeloAut id="j2Decisao" versao="3.0"/>
            <modeloAut id="j2Intimacao" versao="3.2"/>
            <modeloAut id="j2Mandado" versao="3.0"/>
            <modeloAut id="j2Oficio" versao="3.0"/>
            <modeloAut id="j2Protocolo" versao="1.0"/>
            <modeloAut id="j2Sentenca" versao="3.0"/>
            <modeloAut id="j2TermoAudiencia" versao="3.0"/>
            <modeloAut id="j2TermoPeticao" versao="3.0"/>
            <modeloAut id="j2TermoReclamacao" versao="1.0"/>
            <modeloAut id="j2Termo" versao="3.0"/>
            <modeloAut id="j2Tester" versao="3.0"/>
            <modeloAut id="AR-PostList" versao="3.0"/>
            
        </modelosAut>
        <config>
            <correicao inicio="2023-01-16" fim="2023-01-20"/>
            <servidorLocal avaliable="true" domain="j2"/>
            <globalStyle>
                <style id="p">
                    <prop name="margin" value="0pt 0pt 0pt 0pt"/>
                    <prop name="fontFamily" value="'Segoe UI', Tahoma, Geneva, Verdana, sans-serif"  />
                    <prop name="fontSize" value="9pt"/>
                    <prop name="textAlign" value="justify"/>
                </style>
            </globalStyle>
            <enderecoManual edificacaoENominada="false" 
                      nomeEdificacao=""
                      enderecoFormal="Avenida Prudente de Morais, s/n, Residencial Kubistcheck, Bloco Zulica Leite (1º andar) - FACIMP | Wyden"
                      contatosFormal="Imperatriz-MA CEP: 65912-901 | telefone: (99) 99989-6346, (99) 3523-7592 | e-mail: juizciv2_itz@tjma.jus.br"
                      rua="Avenida Prudente de Morais"
                      numero="s/n"
                      bairro="Residencial Kubitscheck"
                      complemento="Bloco 9, FACIMP | Wyden"
                      cidade="Imperatriz"
                      uf="MA"
                      cep="65912-901"
                      telefone="(99) 99989-6346, (99) 3523-7592"
                      eMail="juizciv2_itz@tjma.jus.br"
            />
            <secretarios emExercicio="titular" titular="01682637506" substituto="05174785440" />
            <!--magistrados emExercicio="magisDEBORA" titular="75827298387" 
                                               respondente="47202467372" 
                                               respondente2="maGENIVALDO"
                                               respondente3="magJOSCELMO"
                                               respondente4="magisADOLFO"
                                               presidente="magJOSCELMO"
                                               presidente2="47202467372"
            /-->
            <magistrados emExercicio="titular" titular="75827298387" 
                                               respondente="magisDEBORA" 
                                               respondente2="47202467372"
            />
            <!-- 47202467372 -DELVAN -->
            <!-- 05174785440 -DAYNA -->
            <!--magistrados emExercicio="respondente" titular="maGLADISTON" respondente="magJOSCELMO" respondente2="magisDEBORA" 
                                                  respondente3="MAGANAPAULA" respondente4="0" 
                                                  substituto="0" presidente="magJOSCELMO"/-->
            <OJs centralMandados="false">
                <usuarioRef id="60346736234"/> <!--airton -->
                <usuarioRef id="18062083349"/> <!--ludugero -->
            </OJs>
            <listaPostagem enabled="true"/>
            <expedientes porProvimento="true"/>
        </config>
        <correiosParam contrato="9912319221" codAdmin="03007170" cartaoPostagem="0066187478" codigoUnidade="18301363" unidPost="AC IMPERATRIZ" cliente="Tribunal de Justiça do Estado do Maranhão"/>
    </Unidade>
    <Unidade id="2ª Vara Cível de Imperatriz" genr="F" comarca="Imperatriz" 
             comarcaGenr="M" nomeFormal="2ª Vara Cível" uuid="5e21ff5a-7b89-4a1d-8f55-30a84d0d97b4">
        <competencias>
            <competencia id="civel" />
        </competencias>
        <modelosAut>
            <modeloAut id="j2Certidao" versao="3.0"/>
            <modeloAut id="j2Intimacao" versao="3.1"/>
        </modelosAut>
        <config>
            <servidorLocal avaliable="false" domain="j2"/>
            <globalStyle>
                <style id="p">
                    <prop name="margin" value="0pt 0pt 0pt 0pt"/>
                    <prop name="fontFamily" value="'Segoe UI', Tahoma, Geneva, Verdana, sans-serif"  />
                    <prop name="fontSize" value="9pt"/>
                    <prop name="textAlign" value="justify"/>
                </style>
            </globalStyle>
            <enderecoManual edificacaoENominada="true" 
                      nomeEdificacao="Fórum Ministro Henrique de La Rocque Almeida"
                      enderecoFormal="Rua Rui Barbosa, s/n, Centro, Imperatriz-MA CEP: 65900-440"
                      contatosFormal="telefone: (99) 3529-2013 | e-maail: varaciv2_itz@tjma.jus.br"
                      rua="Rua Rui Barbosa"
                      numero="s/n"
                      bairro="Centro"
                      complemento=""
                      cidade="Imperatriz"
                      uf="MA"
                      cep="65900-440"
                      telefone="(99) 3529-2013"
                      eMail="varaciv2_itz@tjma.jus.br"
            />
            <secretarios emExercicio="titular" titular="62224239300" />
            <magistrados emExercicio="titular" titular="magistraANA" respondente="magJOSCELMO"/>
            <OJs centralMandados="true"/>
            <listaPostagem enabled="true"/>
            <expedientes porProvimento="false"/>
        </config>		
        <correiosParam contrato="9912319221" codAdmin="03007170" cartaoPostagem="0066187478" codigoUnidade="18301363" unidPost="AC IMPERATRIZ" cliente="Tribunal de Justiça do Estado do Maranhão"/>
    </Unidade>
</Definitions>"
};